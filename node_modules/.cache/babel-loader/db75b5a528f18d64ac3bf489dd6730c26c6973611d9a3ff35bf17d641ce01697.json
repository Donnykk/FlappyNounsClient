{"ast":null,"code":"/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport { concat, dataLength, dataSlice, hexlify, isHexString, getBigInt, getBytes, getNumber, isCallException, isError, makeError, assert, assertArgument, FetchRequest, toBeArray, toQuantity, defineProperties, EventPayload, resolveProperties, toUtf8String } from \"../utils/index.js\";\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport { formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse } from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport { PollingBlockSubscriber, PollingBlockTagSubscriber, PollingEventSubscriber, PollingOrphanSubscriber, PollingTransactionSubscriber } from \"./subscriber-polling.js\";\n// Constants\nconst BN_2 = BigInt(2);\nconst MAX_CCIP_REDIRECTS = 10;\nfunction isPromise(value) {\n  return value && typeof value.then === \"function\";\n}\nfunction getTag(prefix, value) {\n  return prefix + \":\" + JSON.stringify(value, (k, v) => {\n    if (v == null) {\n      return \"null\";\n    }\n    if (typeof v === \"bigint\") {\n      return `bigint:${v.toString()}`;\n    }\n    if (typeof v === \"string\") {\n      return v.toLowerCase();\n    }\n    // Sort object keys\n    if (typeof v === \"object\" && !Array.isArray(v)) {\n      const keys = Object.keys(v);\n      keys.sort();\n      return keys.reduce((accum, key) => {\n        accum[key] = v[key];\n        return accum;\n      }, {});\n    }\n    return v;\n  });\n}\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nexport class UnmanagedSubscriber {\n  /**\n   *  The name fof the event.\n   */\n  name;\n  /**\n   *  Create a new UnmanagedSubscriber with %%name%%.\n   */\n  constructor(name) {\n    defineProperties(this, {\n      name\n    });\n  }\n  start() {}\n  stop() {}\n  pause(dropWhilePaused) {}\n  resume() {}\n}\nfunction copy(value) {\n  return JSON.parse(JSON.stringify(value));\n}\nfunction concisify(items) {\n  items = Array.from(new Set(items).values());\n  items.sort();\n  return items;\n}\nasync function getSubscription(_event, provider) {\n  if (_event == null) {\n    throw new Error(\"invalid event\");\n  }\n  // Normalize topic array info an EventFilter\n  if (Array.isArray(_event)) {\n    _event = {\n      topics: _event\n    };\n  }\n  if (typeof _event === \"string\") {\n    switch (_event) {\n      case \"block\":\n      case \"debug\":\n      case \"error\":\n      case \"finalized\":\n      case \"network\":\n      case \"pending\":\n      case \"safe\":\n        {\n          return {\n            type: _event,\n            tag: _event\n          };\n        }\n    }\n  }\n  if (isHexString(_event, 32)) {\n    const hash = _event.toLowerCase();\n    return {\n      type: \"transaction\",\n      tag: getTag(\"tx\", {\n        hash\n      }),\n      hash\n    };\n  }\n  if (_event.orphan) {\n    const event = _event;\n    // @TODO: Should lowercase and whatnot things here instead of copy...\n    return {\n      type: \"orphan\",\n      tag: getTag(\"orphan\", event),\n      filter: copy(event)\n    };\n  }\n  if (_event.address || _event.topics) {\n    const event = _event;\n    const filter = {\n      topics: (event.topics || []).map(t => {\n        if (t == null) {\n          return null;\n        }\n        if (Array.isArray(t)) {\n          return concisify(t.map(t => t.toLowerCase()));\n        }\n        return t.toLowerCase();\n      })\n    };\n    if (event.address) {\n      const addresses = [];\n      const promises = [];\n      const addAddress = addr => {\n        if (isHexString(addr)) {\n          addresses.push(addr);\n        } else {\n          promises.push((async () => {\n            addresses.push(await resolveAddress(addr, provider));\n          })());\n        }\n      };\n      if (Array.isArray(event.address)) {\n        event.address.forEach(addAddress);\n      } else {\n        addAddress(event.address);\n      }\n      if (promises.length) {\n        await Promise.all(promises);\n      }\n      filter.address = concisify(addresses.map(a => a.toLowerCase()));\n    }\n    return {\n      filter,\n      tag: getTag(\"event\", filter),\n      type: \"event\"\n    };\n  }\n  assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\nfunction getTime() {\n  return new Date().getTime();\n}\nconst defaultOptions = {\n  cacheTimeout: 250,\n  pollingInterval: 4000\n};\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nexport class AbstractProvider {\n  #subs;\n  #plugins;\n  // null=unpaused, true=paused+dropWhilePaused, false=paused\n  #pausedState;\n  #destroyed;\n  #networkPromise;\n  #anyNetwork;\n  #performCache;\n  // The most recent block number if running an event or -1 if no \"block\" event\n  #lastBlockNumber;\n  #nextTimer;\n  #timers;\n  #disableCcipRead;\n  #options;\n  /**\n   *  Create a new **AbstractProvider** connected to %%network%%, or\n   *  use the various network detection capabilities to discover the\n   *  [[Network]] if necessary.\n   */\n  constructor(_network, options) {\n    this.#options = Object.assign({}, defaultOptions, options || {});\n    if (_network === \"any\") {\n      this.#anyNetwork = true;\n      this.#networkPromise = null;\n    } else if (_network) {\n      const network = Network.from(_network);\n      this.#anyNetwork = false;\n      this.#networkPromise = Promise.resolve(network);\n      setTimeout(() => {\n        this.emit(\"network\", network, null);\n      }, 0);\n    } else {\n      this.#anyNetwork = false;\n      this.#networkPromise = null;\n    }\n    this.#lastBlockNumber = -1;\n    this.#performCache = new Map();\n    this.#subs = new Map();\n    this.#plugins = new Map();\n    this.#pausedState = null;\n    this.#destroyed = false;\n    this.#nextTimer = 1;\n    this.#timers = new Map();\n    this.#disableCcipRead = false;\n  }\n  get pollingInterval() {\n    return this.#options.pollingInterval;\n  }\n  /**\n   *  Returns ``this``, to allow an **AbstractProvider** to implement\n   *  the [[ContractRunner]] interface.\n   */\n  get provider() {\n    return this;\n  }\n  /**\n   *  Returns all the registered plug-ins.\n   */\n  get plugins() {\n    return Array.from(this.#plugins.values());\n  }\n  /**\n   *  Attach a new plug-in.\n   */\n  attachPlugin(plugin) {\n    if (this.#plugins.get(plugin.name)) {\n      throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n    }\n    this.#plugins.set(plugin.name, plugin.connect(this));\n    return this;\n  }\n  /**\n   *  Get a plugin by name.\n   */\n  getPlugin(name) {\n    return this.#plugins.get(name) || null;\n  }\n  /**\n   *  Prevent any CCIP-read operation, regardless of whether requested\n   *  in a [[call]] using ``enableCcipRead``.\n   */\n  get disableCcipRead() {\n    return this.#disableCcipRead;\n  }\n  set disableCcipRead(value) {\n    this.#disableCcipRead = !!value;\n  }\n  // Shares multiple identical requests made during the same 250ms\n  async #perform(req) {\n    const timeout = this.#options.cacheTimeout;\n    // Caching disabled\n    if (timeout < 0) {\n      return await this._perform(req);\n    }\n    // Create a tag\n    const tag = getTag(req.method, req);\n    let perform = this.#performCache.get(tag);\n    if (!perform) {\n      perform = this._perform(req);\n      this.#performCache.set(tag, perform);\n      setTimeout(() => {\n        if (this.#performCache.get(tag) === perform) {\n          this.#performCache.delete(tag);\n        }\n      }, timeout);\n    }\n    return await perform;\n  }\n  /**\n   *  Resolves to the data for executing the CCIP-read operations.\n   */\n  async ccipReadFetch(tx, calldata, urls) {\n    if (this.disableCcipRead || urls.length === 0 || tx.to == null) {\n      return null;\n    }\n    const sender = tx.to.toLowerCase();\n    const data = calldata.toLowerCase();\n    const errorMessages = [];\n    for (let i = 0; i < urls.length; i++) {\n      const url = urls[i];\n      // URL expansion\n      const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n      // If no {data} is present, use POST; otherwise GET\n      //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n      //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n      //    value.status = response.statusCode;\n      //    return value;\n      //});\n      const request = new FetchRequest(href);\n      if (url.indexOf(\"{data}\") === -1) {\n        request.body = {\n          data,\n          sender\n        };\n      }\n      this.emit(\"debug\", {\n        action: \"sendCcipReadFetchRequest\",\n        request,\n        index: i,\n        urls\n      });\n      let errorMessage = \"unknown error\";\n      // Fetch the resource...\n      let resp;\n      try {\n        resp = await request.send();\n      } catch (error) {\n        // ...low-level fetch error (missing host, bad SSL, etc.),\n        // so try next URL\n        errorMessages.push(error.message);\n        this.emit(\"debug\", {\n          action: \"receiveCcipReadFetchError\",\n          request,\n          result: {\n            error\n          }\n        });\n        continue;\n      }\n      try {\n        const result = resp.bodyJson;\n        if (result.data) {\n          this.emit(\"debug\", {\n            action: \"receiveCcipReadFetchResult\",\n            request,\n            result\n          });\n          return result.data;\n        }\n        if (result.message) {\n          errorMessage = result.message;\n        }\n        this.emit(\"debug\", {\n          action: \"receiveCcipReadFetchError\",\n          request,\n          result\n        });\n      } catch (error) {}\n      // 4xx indicates the result is not present; stop\n      assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${errorMessage}`, \"OFFCHAIN_FAULT\", {\n        reason: \"404_MISSING_RESOURCE\",\n        transaction: tx,\n        info: {\n          url,\n          errorMessage\n        }\n      });\n      // 5xx indicates server issue; try the next url\n      errorMessages.push(errorMessage);\n    }\n    assert(false, `error encountered during CCIP fetch: ${errorMessages.map(m => JSON.stringify(m)).join(\", \")}`, \"OFFCHAIN_FAULT\", {\n      reason: \"500_SERVER_ERROR\",\n      transaction: tx,\n      info: {\n        urls,\n        errorMessages\n      }\n    });\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a block before\n   *  returning it, to add additional properties or an alternate\n   *  sub-class of [[Block]].\n   */\n  _wrapBlock(value, network) {\n    return new Block(formatBlock(value), this);\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a log before\n   *  returning it, to add additional properties or an alternate\n   *  sub-class of [[Log]].\n   */\n  _wrapLog(value, network) {\n    return new Log(formatLog(value), this);\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a transaction\n   *  receipt before returning it, to add additional properties or an\n   *  alternate sub-class of [[TransactionReceipt]].\n   */\n  _wrapTransactionReceipt(value, network) {\n    return new TransactionReceipt(formatTransactionReceipt(value), this);\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a transaction\n   *  response before returning it, to add additional properties or an\n   *  alternate sub-class of [[TransactionResponse]].\n   */\n  _wrapTransactionResponse(tx, network) {\n    return new TransactionResponse(formatTransactionResponse(tx), this);\n  }\n  /**\n   *  Resolves to the Network, forcing a network detection using whatever\n   *  technique the sub-class requires.\n   *\n   *  Sub-classes **must** override this.\n   */\n  _detectNetwork() {\n    assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"_detectNetwork\"\n    });\n  }\n  /**\n   *  Sub-classes should use this to perform all built-in operations. All\n   *  methods sanitizes and normalizes the values passed into this.\n   *\n   *  Sub-classes **must** override this.\n   */\n  async _perform(req) {\n    assert(false, `unsupported method: ${req.method}`, \"UNSUPPORTED_OPERATION\", {\n      operation: req.method,\n      info: req\n    });\n  }\n  // State\n  async getBlockNumber() {\n    const blockNumber = getNumber(await this.#perform({\n      method: \"getBlockNumber\"\n    }), \"%response\");\n    if (this.#lastBlockNumber >= 0) {\n      this.#lastBlockNumber = blockNumber;\n    }\n    return blockNumber;\n  }\n  /**\n   *  Returns or resolves to the address for %%address%%, resolving ENS\n   *  names and [[Addressable]] objects and returning if already an\n   *  address.\n   */\n  _getAddress(address) {\n    return resolveAddress(address, this);\n  }\n  /**\n   *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n   *  negative values and returning if already a valid block tag.\n   */\n  _getBlockTag(blockTag) {\n    if (blockTag == null) {\n      return \"latest\";\n    }\n    switch (blockTag) {\n      case \"earliest\":\n        return \"0x0\";\n      case \"finalized\":\n      case \"latest\":\n      case \"pending\":\n      case \"safe\":\n        return blockTag;\n    }\n    if (isHexString(blockTag)) {\n      if (isHexString(blockTag, 32)) {\n        return blockTag;\n      }\n      return toQuantity(blockTag);\n    }\n    if (typeof blockTag === \"bigint\") {\n      blockTag = getNumber(blockTag, \"blockTag\");\n    }\n    if (typeof blockTag === \"number\") {\n      if (blockTag >= 0) {\n        return toQuantity(blockTag);\n      }\n      if (this.#lastBlockNumber >= 0) {\n        return toQuantity(this.#lastBlockNumber + blockTag);\n      }\n      return this.getBlockNumber().then(b => toQuantity(b + blockTag));\n    }\n    assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n  }\n  /**\n   *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n   *  names or [[Addressable]] object and returning if already a valid\n   *  filter.\n   */\n  _getFilter(filter) {\n    // Create a canonical representation of the topics\n    const topics = (filter.topics || []).map(t => {\n      if (t == null) {\n        return null;\n      }\n      if (Array.isArray(t)) {\n        return concisify(t.map(t => t.toLowerCase()));\n      }\n      return t.toLowerCase();\n    });\n    const blockHash = \"blockHash\" in filter ? filter.blockHash : undefined;\n    const resolve = (_address, fromBlock, toBlock) => {\n      let address = undefined;\n      switch (_address.length) {\n        case 0:\n          break;\n        case 1:\n          address = _address[0];\n          break;\n        default:\n          _address.sort();\n          address = _address;\n      }\n      if (blockHash) {\n        if (fromBlock != null || toBlock != null) {\n          throw new Error(\"invalid filter\");\n        }\n      }\n      const filter = {};\n      if (address) {\n        filter.address = address;\n      }\n      if (topics.length) {\n        filter.topics = topics;\n      }\n      if (fromBlock) {\n        filter.fromBlock = fromBlock;\n      }\n      if (toBlock) {\n        filter.toBlock = toBlock;\n      }\n      if (blockHash) {\n        filter.blockHash = blockHash;\n      }\n      return filter;\n    };\n    // Addresses could be async (ENS names or Addressables)\n    let address = [];\n    if (filter.address) {\n      if (Array.isArray(filter.address)) {\n        for (const addr of filter.address) {\n          address.push(this._getAddress(addr));\n        }\n      } else {\n        address.push(this._getAddress(filter.address));\n      }\n    }\n    let fromBlock = undefined;\n    if (\"fromBlock\" in filter) {\n      fromBlock = this._getBlockTag(filter.fromBlock);\n    }\n    let toBlock = undefined;\n    if (\"toBlock\" in filter) {\n      toBlock = this._getBlockTag(filter.toBlock);\n    }\n    if (address.filter(a => typeof a !== \"string\").length || fromBlock != null && typeof fromBlock !== \"string\" || toBlock != null && typeof toBlock !== \"string\") {\n      return Promise.all([Promise.all(address), fromBlock, toBlock]).then(result => {\n        return resolve(result[0], result[1], result[2]);\n      });\n    }\n    return resolve(address, fromBlock, toBlock);\n  }\n  /**\n   *  Returns or resolves to a transaction for %%request%%, resolving\n   *  any ENS names or [[Addressable]] and returning if already a valid\n   *  transaction.\n   */\n  _getTransactionRequest(_request) {\n    const request = copyRequest(_request);\n    const promises = [];\n    [\"to\", \"from\"].forEach(key => {\n      if (request[key] == null) {\n        return;\n      }\n      const addr = resolveAddress(request[key], this);\n      if (isPromise(addr)) {\n        promises.push(async function () {\n          request[key] = await addr;\n        }());\n      } else {\n        request[key] = addr;\n      }\n    });\n    if (request.blockTag != null) {\n      const blockTag = this._getBlockTag(request.blockTag);\n      if (isPromise(blockTag)) {\n        promises.push(async function () {\n          request.blockTag = await blockTag;\n        }());\n      } else {\n        request.blockTag = blockTag;\n      }\n    }\n    if (promises.length) {\n      return async function () {\n        await Promise.all(promises);\n        return request;\n      }();\n    }\n    return request;\n  }\n  async getNetwork() {\n    // No explicit network was set and this is our first time\n    if (this.#networkPromise == null) {\n      // Detect the current network (shared with all calls)\n      const detectNetwork = (async () => {\n        try {\n          const network = await this._detectNetwork();\n          this.emit(\"network\", network, null);\n          return network;\n        } catch (error) {\n          if (this.#networkPromise === detectNetwork) {\n            this.#networkPromise = null;\n          }\n          throw error;\n        }\n      })();\n      this.#networkPromise = detectNetwork;\n      return (await detectNetwork).clone();\n    }\n    const networkPromise = this.#networkPromise;\n    const [expected, actual] = await Promise.all([networkPromise, this._detectNetwork() // The actual connected network\n    ]);\n\n    if (expected.chainId !== actual.chainId) {\n      if (this.#anyNetwork) {\n        // The \"any\" network can change, so notify listeners\n        this.emit(\"network\", actual, expected);\n        // Update the network if something else hasn't already changed it\n        if (this.#networkPromise === networkPromise) {\n          this.#networkPromise = Promise.resolve(actual);\n        }\n      } else {\n        // Otherwise, we do not allow changes to the underlying network\n        assert(false, `network changed: ${expected.chainId} => ${actual.chainId} `, \"NETWORK_ERROR\", {\n          event: \"changed\"\n        });\n      }\n    }\n    return expected.clone();\n  }\n  async getFeeData() {\n    const network = await this.getNetwork();\n    const getFeeDataFunc = async () => {\n      const {\n        _block,\n        gasPrice,\n        priorityFee\n      } = await resolveProperties({\n        _block: this.#getBlock(\"latest\", false),\n        gasPrice: (async () => {\n          try {\n            const value = await this.#perform({\n              method: \"getGasPrice\"\n            });\n            return getBigInt(value, \"%response\");\n          } catch (error) {}\n          return null;\n        })(),\n        priorityFee: (async () => {\n          try {\n            const value = await this.#perform({\n              method: \"getPriorityFee\"\n            });\n            return getBigInt(value, \"%response\");\n          } catch (error) {}\n          return null;\n        })()\n      });\n      let maxFeePerGas = null;\n      let maxPriorityFeePerGas = null;\n      // These are the recommended EIP-1559 heuristics for fee data\n      const block = this._wrapBlock(_block, network);\n      if (block && block.baseFeePerGas) {\n        maxPriorityFeePerGas = priorityFee != null ? priorityFee : BigInt(\"1000000000\");\n        maxFeePerGas = block.baseFeePerGas * BN_2 + maxPriorityFeePerGas;\n      }\n      return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n    };\n    // Check for a FeeDataNetWorkPlugin\n    const plugin = network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n    if (plugin) {\n      const req = new FetchRequest(plugin.url);\n      const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n      return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n    }\n    return await getFeeDataFunc();\n  }\n  async estimateGas(_tx) {\n    let tx = this._getTransactionRequest(_tx);\n    if (isPromise(tx)) {\n      tx = await tx;\n    }\n    return getBigInt(await this.#perform({\n      method: \"estimateGas\",\n      transaction: tx\n    }), \"%response\");\n  }\n  async #call(tx, blockTag, attempt) {\n    assert(attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n      reason: \"TOO_MANY_REDIRECTS\",\n      transaction: Object.assign({}, tx, {\n        blockTag,\n        enableCcipRead: true\n      })\n    });\n    // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n    const transaction = copyRequest(tx);\n    try {\n      return hexlify(await this._perform({\n        method: \"call\",\n        transaction,\n        blockTag\n      }));\n    } catch (error) {\n      // CCIP Read OffchainLookup\n      if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n        const data = error.data;\n        const txSender = await resolveAddress(transaction.to, this);\n        // Parse the CCIP Read Arguments\n        let ccipArgs;\n        try {\n          ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n        } catch (error) {\n          assert(false, error.message, \"OFFCHAIN_FAULT\", {\n            reason: \"BAD_DATA\",\n            transaction,\n            info: {\n              data\n            }\n          });\n        }\n        // Check the sender of the OffchainLookup matches the transaction\n        assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(), \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n          action: \"call\",\n          data,\n          reason: \"OffchainLookup\",\n          transaction: transaction,\n          invocation: null,\n          revert: {\n            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n            name: \"OffchainLookup\",\n            args: ccipArgs.errorArgs\n          }\n        });\n        const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n        assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n          reason: \"FETCH_FAILED\",\n          transaction,\n          info: {\n            data: error.data,\n            errorArgs: ccipArgs.errorArgs\n          }\n        });\n        const tx = {\n          to: txSender,\n          data: concat([ccipArgs.selector, encodeBytes([ccipResult, ccipArgs.extraData])])\n        };\n        this.emit(\"debug\", {\n          action: \"sendCcipReadCall\",\n          transaction: tx\n        });\n        try {\n          const result = await this.#call(tx, blockTag, attempt + 1);\n          this.emit(\"debug\", {\n            action: \"receiveCcipReadCallResult\",\n            transaction: Object.assign({}, tx),\n            result\n          });\n          return result;\n        } catch (error) {\n          this.emit(\"debug\", {\n            action: \"receiveCcipReadCallError\",\n            transaction: Object.assign({}, tx),\n            error\n          });\n          throw error;\n        }\n      }\n      throw error;\n    }\n  }\n  async #checkNetwork(promise) {\n    const {\n      value\n    } = await resolveProperties({\n      network: this.getNetwork(),\n      value: promise\n    });\n    return value;\n  }\n  async call(_tx) {\n    const {\n      tx,\n      blockTag\n    } = await resolveProperties({\n      tx: this._getTransactionRequest(_tx),\n      blockTag: this._getBlockTag(_tx.blockTag)\n    });\n    return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0 : -1));\n  }\n  // Account\n  async #getAccountValue(request, _address, _blockTag) {\n    let address = this._getAddress(_address);\n    let blockTag = this._getBlockTag(_blockTag);\n    if (typeof address !== \"string\" || typeof blockTag !== \"string\") {\n      [address, blockTag] = await Promise.all([address, blockTag]);\n    }\n    return await this.#checkNetwork(this.#perform(Object.assign(request, {\n      address,\n      blockTag\n    })));\n  }\n  async getBalance(address, blockTag) {\n    return getBigInt(await this.#getAccountValue({\n      method: \"getBalance\"\n    }, address, blockTag), \"%response\");\n  }\n  async getTransactionCount(address, blockTag) {\n    return getNumber(await this.#getAccountValue({\n      method: \"getTransactionCount\"\n    }, address, blockTag), \"%response\");\n  }\n  async getCode(address, blockTag) {\n    return hexlify(await this.#getAccountValue({\n      method: \"getCode\"\n    }, address, blockTag));\n  }\n  async getStorage(address, _position, blockTag) {\n    const position = getBigInt(_position, \"position\");\n    return hexlify(await this.#getAccountValue({\n      method: \"getStorage\",\n      position\n    }, address, blockTag));\n  }\n  // Write\n  async broadcastTransaction(signedTx) {\n    const {\n      blockNumber,\n      hash,\n      network\n    } = await resolveProperties({\n      blockNumber: this.getBlockNumber(),\n      hash: this._perform({\n        method: \"broadcastTransaction\",\n        signedTransaction: signedTx\n      }),\n      network: this.getNetwork()\n    });\n    const tx = Transaction.from(signedTx);\n    if (tx.hash !== hash) {\n      throw new Error(\"@TODO: the returned hash did not match\");\n    }\n    return this._wrapTransactionResponse(tx, network).replaceableTransaction(blockNumber);\n  }\n  async #getBlock(block, includeTransactions) {\n    // @TODO: Add CustomBlockPlugin check\n    if (isHexString(block, 32)) {\n      return await this.#perform({\n        method: \"getBlock\",\n        blockHash: block,\n        includeTransactions\n      });\n    }\n    let blockTag = this._getBlockTag(block);\n    if (typeof blockTag !== \"string\") {\n      blockTag = await blockTag;\n    }\n    return await this.#perform({\n      method: \"getBlock\",\n      blockTag,\n      includeTransactions\n    });\n  }\n  // Queries\n  async getBlock(block, prefetchTxs) {\n    const {\n      network,\n      params\n    } = await resolveProperties({\n      network: this.getNetwork(),\n      params: this.#getBlock(block, !!prefetchTxs)\n    });\n    if (params == null) {\n      return null;\n    }\n    return this._wrapBlock(params, network);\n  }\n  async getTransaction(hash) {\n    const {\n      network,\n      params\n    } = await resolveProperties({\n      network: this.getNetwork(),\n      params: this.#perform({\n        method: \"getTransaction\",\n        hash\n      })\n    });\n    if (params == null) {\n      return null;\n    }\n    return this._wrapTransactionResponse(params, network);\n  }\n  async getTransactionReceipt(hash) {\n    const {\n      network,\n      params\n    } = await resolveProperties({\n      network: this.getNetwork(),\n      params: this.#perform({\n        method: \"getTransactionReceipt\",\n        hash\n      })\n    });\n    if (params == null) {\n      return null;\n    }\n    // Some backends did not backfill the effectiveGasPrice into old transactions\n    // in the receipt, so we look it up manually and inject it.\n    if (params.gasPrice == null && params.effectiveGasPrice == null) {\n      const tx = await this.#perform({\n        method: \"getTransaction\",\n        hash\n      });\n      if (tx == null) {\n        throw new Error(\"report this; could not find tx or effectiveGasPrice\");\n      }\n      params.effectiveGasPrice = tx.gasPrice;\n    }\n    return this._wrapTransactionReceipt(params, network);\n  }\n  async getTransactionResult(hash) {\n    const {\n      result\n    } = await resolveProperties({\n      network: this.getNetwork(),\n      result: this.#perform({\n        method: \"getTransactionResult\",\n        hash\n      })\n    });\n    if (result == null) {\n      return null;\n    }\n    return hexlify(result);\n  }\n  // Bloom-filter Queries\n  async getLogs(_filter) {\n    let filter = this._getFilter(_filter);\n    if (isPromise(filter)) {\n      filter = await filter;\n    }\n    const {\n      network,\n      params\n    } = await resolveProperties({\n      network: this.getNetwork(),\n      params: this.#perform({\n        method: \"getLogs\",\n        filter\n      })\n    });\n    return params.map(p => this._wrapLog(p, network));\n  }\n  // ENS\n  _getProvider(chainId) {\n    assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"_getProvider()\"\n    });\n  }\n  async getResolver(name) {\n    return await EnsResolver.fromName(this, name);\n  }\n  async getAvatar(name) {\n    const resolver = await this.getResolver(name);\n    if (resolver) {\n      return await resolver.getAvatar();\n    }\n    return null;\n  }\n  async resolveName(name) {\n    const resolver = await this.getResolver(name);\n    if (resolver) {\n      return await resolver.getAddress();\n    }\n    return null;\n  }\n  async lookupAddress(address) {\n    address = getAddress(address);\n    const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n    try {\n      const ensAddr = await EnsResolver.getEnsAddress(this);\n      const ensContract = new Contract(ensAddr, [\"function resolver(bytes32) view returns (address)\"], this);\n      const resolver = await ensContract.resolver(node);\n      if (resolver == null || resolver === ZeroAddress) {\n        return null;\n      }\n      const resolverContract = new Contract(resolver, [\"function name(bytes32) view returns (string)\"], this);\n      const name = await resolverContract.name(node);\n      // Failed forward resolution\n      const check = await this.resolveName(name);\n      if (check !== address) {\n        return null;\n      }\n      return name;\n    } catch (error) {\n      // No data was returned from the resolver\n      if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n        return null;\n      }\n      // Something reerted\n      if (isError(error, \"CALL_EXCEPTION\")) {\n        return null;\n      }\n      throw error;\n    }\n    return null;\n  }\n  async waitForTransaction(hash, _confirms, timeout) {\n    const confirms = _confirms != null ? _confirms : 1;\n    if (confirms === 0) {\n      return this.getTransactionReceipt(hash);\n    }\n    return new Promise(async (resolve, reject) => {\n      let timer = null;\n      const listener = async blockNumber => {\n        try {\n          const receipt = await this.getTransactionReceipt(hash);\n          if (receipt != null) {\n            if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n              resolve(receipt);\n              //this.off(\"block\", listener);\n              if (timer) {\n                clearTimeout(timer);\n                timer = null;\n              }\n              return;\n            }\n          }\n        } catch (error) {\n          console.log(\"EEE\", error);\n        }\n        this.once(\"block\", listener);\n      };\n      if (timeout != null) {\n        timer = setTimeout(() => {\n          if (timer == null) {\n            return;\n          }\n          timer = null;\n          this.off(\"block\", listener);\n          reject(makeError(\"timeout\", \"TIMEOUT\", {\n            reason: \"timeout\"\n          }));\n        }, timeout);\n      }\n      listener(await this.getBlockNumber());\n    });\n  }\n  async waitForBlock(blockTag) {\n    assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n      operation: \"waitForBlock\"\n    });\n  }\n  /**\n   *  Clear a timer created using the [[_setTimeout]] method.\n   */\n  _clearTimeout(timerId) {\n    const timer = this.#timers.get(timerId);\n    if (!timer) {\n      return;\n    }\n    if (timer.timer) {\n      clearTimeout(timer.timer);\n    }\n    this.#timers.delete(timerId);\n  }\n  /**\n   *  Create a timer that will execute %%func%% after at least %%timeout%%\n   *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n   *  in the next event loop.\n   *\n   *  [Pausing](AbstractProvider-paused) the provider will pause any\n   *  associated timers.\n   */\n  _setTimeout(_func, timeout) {\n    if (timeout == null) {\n      timeout = 0;\n    }\n    const timerId = this.#nextTimer++;\n    const func = () => {\n      this.#timers.delete(timerId);\n      _func();\n    };\n    if (this.paused) {\n      this.#timers.set(timerId, {\n        timer: null,\n        func,\n        time: timeout\n      });\n    } else {\n      const timer = setTimeout(func, timeout);\n      this.#timers.set(timerId, {\n        timer,\n        func,\n        time: getTime()\n      });\n    }\n    return timerId;\n  }\n  /**\n   *  Perform %%func%% on each subscriber.\n   */\n  _forEachSubscriber(func) {\n    for (const sub of this.#subs.values()) {\n      func(sub.subscriber);\n    }\n  }\n  /**\n   *  Sub-classes may override this to customize subscription\n   *  implementations.\n   */\n  _getSubscriber(sub) {\n    switch (sub.type) {\n      case \"debug\":\n      case \"error\":\n      case \"network\":\n        return new UnmanagedSubscriber(sub.type);\n      case \"block\":\n        {\n          const subscriber = new PollingBlockSubscriber(this);\n          subscriber.pollingInterval = this.pollingInterval;\n          return subscriber;\n        }\n      case \"safe\":\n      case \"finalized\":\n        return new PollingBlockTagSubscriber(this, sub.type);\n      case \"event\":\n        return new PollingEventSubscriber(this, sub.filter);\n      case \"transaction\":\n        return new PollingTransactionSubscriber(this, sub.hash);\n      case \"orphan\":\n        return new PollingOrphanSubscriber(this, sub.filter);\n    }\n    throw new Error(`unsupported event: ${sub.type}`);\n  }\n  /**\n   *  If a [[Subscriber]] fails and needs to replace itself, this\n   *  method may be used.\n   *\n   *  For example, this is used for providers when using the\n   *  ``eth_getFilterChanges`` method, which can return null if state\n   *  filters are not supported by the backend, allowing the Subscriber\n   *  to swap in a [[PollingEventSubscriber]].\n   */\n  _recoverSubscriber(oldSub, newSub) {\n    for (const sub of this.#subs.values()) {\n      if (sub.subscriber === oldSub) {\n        if (sub.started) {\n          sub.subscriber.stop();\n        }\n        sub.subscriber = newSub;\n        if (sub.started) {\n          newSub.start();\n        }\n        if (this.#pausedState != null) {\n          newSub.pause(this.#pausedState);\n        }\n        break;\n      }\n    }\n  }\n  async #hasSub(event, emitArgs) {\n    let sub = await getSubscription(event, this);\n    // This is a log that is removing an existing log; we actually want\n    // to emit an orphan event for the removed log\n    if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n      sub = await getSubscription({\n        orphan: \"drop-log\",\n        log: emitArgs[0]\n      }, this);\n    }\n    return this.#subs.get(sub.tag) || null;\n  }\n  async #getSub(event) {\n    const subscription = await getSubscription(event, this);\n    // Prevent tampering with our tag in any subclass' _getSubscriber\n    const tag = subscription.tag;\n    let sub = this.#subs.get(tag);\n    if (!sub) {\n      const subscriber = this._getSubscriber(subscription);\n      const addressableMap = new WeakMap();\n      const nameMap = new Map();\n      sub = {\n        subscriber,\n        tag,\n        addressableMap,\n        nameMap,\n        started: false,\n        listeners: []\n      };\n      this.#subs.set(tag, sub);\n    }\n    return sub;\n  }\n  async on(event, listener) {\n    const sub = await this.#getSub(event);\n    sub.listeners.push({\n      listener,\n      once: false\n    });\n    if (!sub.started) {\n      sub.subscriber.start();\n      sub.started = true;\n      if (this.#pausedState != null) {\n        sub.subscriber.pause(this.#pausedState);\n      }\n    }\n    return this;\n  }\n  async once(event, listener) {\n    const sub = await this.#getSub(event);\n    sub.listeners.push({\n      listener,\n      once: true\n    });\n    if (!sub.started) {\n      sub.subscriber.start();\n      sub.started = true;\n      if (this.#pausedState != null) {\n        sub.subscriber.pause(this.#pausedState);\n      }\n    }\n    return this;\n  }\n  async emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const sub = await this.#hasSub(event, args);\n    // If there is not subscription or if a recent emit removed\n    // the last of them (which also deleted the sub) do nothing\n    if (!sub || sub.listeners.length === 0) {\n      return false;\n    }\n    ;\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(_ref => {\n      let {\n        listener,\n        once\n      } = _ref;\n      const payload = new EventPayload(this, once ? null : listener, event);\n      try {\n        listener.call(this, ...args, payload);\n      } catch (error) {}\n      return !once;\n    });\n    if (sub.listeners.length === 0) {\n      if (sub.started) {\n        sub.subscriber.stop();\n      }\n      this.#subs.delete(sub.tag);\n    }\n    return count > 0;\n  }\n  async listenerCount(event) {\n    if (event) {\n      const sub = await this.#hasSub(event);\n      if (!sub) {\n        return 0;\n      }\n      return sub.listeners.length;\n    }\n    let total = 0;\n    for (const {\n      listeners\n    } of this.#subs.values()) {\n      total += listeners.length;\n    }\n    return total;\n  }\n  async listeners(event) {\n    if (event) {\n      const sub = await this.#hasSub(event);\n      if (!sub) {\n        return [];\n      }\n      return sub.listeners.map(_ref2 => {\n        let {\n          listener\n        } = _ref2;\n        return listener;\n      });\n    }\n    let result = [];\n    for (const {\n      listeners\n    } of this.#subs.values()) {\n      result = result.concat(listeners.map(_ref3 => {\n        let {\n          listener\n        } = _ref3;\n        return listener;\n      }));\n    }\n    return result;\n  }\n  async off(event, listener) {\n    const sub = await this.#hasSub(event);\n    if (!sub) {\n      return this;\n    }\n    if (listener) {\n      const index = sub.listeners.map(_ref4 => {\n        let {\n          listener\n        } = _ref4;\n        return listener;\n      }).indexOf(listener);\n      if (index >= 0) {\n        sub.listeners.splice(index, 1);\n      }\n    }\n    if (!listener || sub.listeners.length === 0) {\n      if (sub.started) {\n        sub.subscriber.stop();\n      }\n      this.#subs.delete(sub.tag);\n    }\n    return this;\n  }\n  async removeAllListeners(event) {\n    if (event) {\n      const {\n        tag,\n        started,\n        subscriber\n      } = await this.#getSub(event);\n      if (started) {\n        subscriber.stop();\n      }\n      this.#subs.delete(tag);\n    } else {\n      for (const [tag, {\n        started,\n        subscriber\n      }] of this.#subs) {\n        if (started) {\n          subscriber.stop();\n        }\n        this.#subs.delete(tag);\n      }\n    }\n    return this;\n  }\n  // Alias for \"on\"\n  async addListener(event, listener) {\n    return await this.on(event, listener);\n  }\n  // Alias for \"off\"\n  async removeListener(event, listener) {\n    return this.off(event, listener);\n  }\n  /**\n   *  If this provider has been destroyed using the [[destroy]] method.\n   *\n   *  Once destroyed, all resources are reclaimed, internal event loops\n   *  and timers are cleaned up and no further requests may be sent to\n   *  the provider.\n   */\n  get destroyed() {\n    return this.#destroyed;\n  }\n  /**\n   *  Sub-classes may use this to shutdown any sockets or release their\n   *  resources and reject any pending requests.\n   *\n   *  Sub-classes **must** call ``super.destroy()``.\n   */\n  destroy() {\n    // Stop all listeners\n    this.removeAllListeners();\n    // Shut down all tiemrs\n    for (const timerId of this.#timers.keys()) {\n      this._clearTimeout(timerId);\n    }\n    this.#destroyed = true;\n  }\n  /**\n   *  Whether the provider is currently paused.\n   *\n   *  A paused provider will not emit any events, and generally should\n   *  not make any requests to the network, but that is up to sub-classes\n   *  to manage.\n   *\n   *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n   *  which will buffer any events that occur while paused until the\n   *  provider is unpaused.\n   */\n  get paused() {\n    return this.#pausedState != null;\n  }\n  set paused(pause) {\n    if (!!pause === this.paused) {\n      return;\n    }\n    if (this.paused) {\n      this.resume();\n    } else {\n      this.pause(false);\n    }\n  }\n  /**\n   *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n   *  while paused are dropped, otherwise all events will be emitted once\n   *  the provider is unpaused.\n   */\n  pause(dropWhilePaused) {\n    this.#lastBlockNumber = -1;\n    if (this.#pausedState != null) {\n      if (this.#pausedState == !!dropWhilePaused) {\n        return;\n      }\n      assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"pause\"\n      });\n    }\n    this._forEachSubscriber(s => s.pause(dropWhilePaused));\n    this.#pausedState = !!dropWhilePaused;\n    for (const timer of this.#timers.values()) {\n      // Clear the timer\n      if (timer.timer) {\n        clearTimeout(timer.timer);\n      }\n      // Remaining time needed for when we become unpaused\n      timer.time = getTime() - timer.time;\n    }\n  }\n  /**\n   *  Resume the provider.\n   */\n  resume() {\n    if (this.#pausedState == null) {\n      return;\n    }\n    this._forEachSubscriber(s => s.resume());\n    this.#pausedState = null;\n    for (const timer of this.#timers.values()) {\n      // Remaining time when we were paused\n      let timeout = timer.time;\n      if (timeout < 0) {\n        timeout = 0;\n      }\n      // Start time (in cause paused, so we con compute remaininf time)\n      timer.time = getTime();\n      // Start the timer\n      setTimeout(timer.func, timeout);\n    }\n  }\n}\nfunction _parseString(result, start) {\n  try {\n    const bytes = _parseBytes(result, start);\n    if (bytes) {\n      return toUtf8String(bytes);\n    }\n  } catch (error) {}\n  return null;\n}\nfunction _parseBytes(result, start) {\n  if (result === \"0x\") {\n    return null;\n  }\n  try {\n    const offset = getNumber(dataSlice(result, start, start + 32));\n    const length = getNumber(dataSlice(result, offset, offset + 32));\n    return dataSlice(result, offset + 32, offset + 32 + length);\n  } catch (error) {}\n  return null;\n}\nfunction numPad(value) {\n  const result = toBeArray(value);\n  if (result.length > 32) {\n    throw new Error(\"internal; should not happen\");\n  }\n  const padded = new Uint8Array(32);\n  padded.set(result, 32 - result.length);\n  return padded;\n}\nfunction bytesPad(value) {\n  if (value.length % 32 === 0) {\n    return value;\n  }\n  const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n  result.set(value);\n  return result;\n}\nconst empty = new Uint8Array([]);\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n  const result = [];\n  let byteCount = 0;\n  // Add place-holders for pointers as we add items\n  for (let i = 0; i < datas.length; i++) {\n    result.push(empty);\n    byteCount += 32;\n  }\n  for (let i = 0; i < datas.length; i++) {\n    const data = getBytes(datas[i]);\n    // Update the bytes offset\n    result[i] = numPad(byteCount);\n    // The length and padded value of data\n    result.push(numPad(data.length));\n    result.push(bytesPad(data));\n    byteCount += 32 + Math.ceil(data.length / 32) * 32;\n  }\n  return concat(result);\n}\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction parseOffchainLookup(data) {\n  const result = {\n    sender: \"\",\n    urls: [],\n    calldata: \"\",\n    selector: \"\",\n    extraData: \"\",\n    errorArgs: []\n  };\n  assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n    reason: \"insufficient OffchainLookup data\"\n  });\n  const sender = dataSlice(data, 0, 32);\n  assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n    reason: \"corrupt OffchainLookup sender\"\n  });\n  result.sender = dataSlice(sender, 12);\n  // Read the URLs from the response\n  try {\n    const urls = [];\n    const urlsOffset = getNumber(dataSlice(data, 32, 64));\n    const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n    const urlsData = dataSlice(data, urlsOffset + 32);\n    for (let u = 0; u < urlsLength; u++) {\n      const url = _parseString(urlsData, u * 32);\n      if (url == null) {\n        throw new Error(\"abort\");\n      }\n      urls.push(url);\n    }\n    result.urls = urls;\n  } catch (error) {\n    assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup urls\"\n    });\n  }\n  // Get the CCIP calldata to forward\n  try {\n    const calldata = _parseBytes(data, 64);\n    if (calldata == null) {\n      throw new Error(\"abort\");\n    }\n    result.calldata = calldata;\n  } catch (error) {\n    assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup calldata\"\n    });\n  }\n  // Get the callbackSelector (bytes4)\n  assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n    reason: \"corrupt OffchainLookup callbaackSelector\"\n  });\n  result.selector = dataSlice(data, 96, 100);\n  // Get the extra data to send back to the contract as context\n  try {\n    const extraData = _parseBytes(data, 128);\n    if (extraData == null) {\n      throw new Error(\"abort\");\n    }\n    result.extraData = extraData;\n  } catch (error) {\n    assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup extraData\"\n    });\n  }\n  result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map(k => result[k]);\n  return result;\n}","map":{"version":3,"mappings":"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","names":["getAddress","resolveAddress","ZeroAddress","Contract","namehash","Transaction","concat","dataLength","dataSlice","hexlify","isHexString","getBigInt","getBytes","getNumber","isCallException","isError","makeError","assert","assertArgument","FetchRequest","toBeArray","toQuantity","defineProperties","EventPayload","resolveProperties","toUtf8String","EnsResolver","formatBlock","formatLog","formatTransactionReceipt","formatTransactionResponse","Network","copyRequest","Block","FeeData","Log","TransactionReceipt","TransactionResponse","PollingBlockSubscriber","PollingBlockTagSubscriber","PollingEventSubscriber","PollingOrphanSubscriber","PollingTransactionSubscriber","BN_2","BigInt","MAX_CCIP_REDIRECTS","isPromise","value","then","getTag","prefix","JSON","stringify","k","v","toString","toLowerCase","Array","isArray","keys","Object","sort","reduce","accum","key","UnmanagedSubscriber","name","constructor","start","stop","pause","dropWhilePaused","resume","copy","parse","concisify","items","from","Set","values","getSubscription","_event","provider","Error","topics","type","tag","hash","orphan","event","filter","address","map","t","addresses","promises","addAddress","addr","push","forEach","length","Promise","all","a","getTime","Date","defaultOptions","cacheTimeout","pollingInterval","AbstractProvider","_network","options","assign","network","resolve","setTimeout","emit","Map","plugins","attachPlugin","plugin","get","set","connect","getPlugin","disableCcipRead","req","timeout","_perform","method","perform","delete","ccipReadFetch","tx","calldata","urls","to","sender","data","errorMessages","i","url","href","replace","request","indexOf","body","action","index","errorMessage","resp","send","error","message","result","bodyJson","statusCode","reason","transaction","info","m","join","_wrapBlock","_wrapLog","_wrapTransactionReceipt","_wrapTransactionResponse","_detectNetwork","operation","getBlockNumber","blockNumber","_getAddress","_getBlockTag","blockTag","b","_getFilter","blockHash","undefined","_address","fromBlock","toBlock","_getTransactionRequest","_request","getNetwork","detectNetwork","clone","networkPromise","expected","actual","chainId","getFeeData","getFeeDataFunc","_block","gasPrice","priorityFee","maxFeePerGas","maxPriorityFeePerGas","block","baseFeePerGas","feeData","processFunc","estimateGas","_tx","attempt","enableCcipRead","txSender","ccipArgs","parseOffchainLookup","invocation","revert","signature","args","errorArgs","ccipResult","selector","encodeBytes","extraData","promise","call","_blockTag","getBalance","getTransactionCount","getCode","getStorage","_position","position","broadcastTransaction","signedTx","signedTransaction","replaceableTransaction","includeTransactions","getBlock","prefetchTxs","params","getTransaction","getTransactionReceipt","effectiveGasPrice","getTransactionResult","getLogs","_filter","p","_getProvider","getResolver","fromName","getAvatar","resolver","resolveName","lookupAddress","node","substring","ensAddr","getEnsAddress","ensContract","resolverContract","check","waitForTransaction","_confirms","confirms","reject","timer","listener","receipt","clearTimeout","console","log","once","off","waitForBlock","_clearTimeout","timerId","_setTimeout","_func","func","paused","time","_forEachSubscriber","sub","subscriber","_getSubscriber","_recoverSubscriber","oldSub","newSub","started","emitArgs","removed","subscription","addressableMap","WeakMap","nameMap","listeners","on","count","payload","listenerCount","total","splice","removeAllListeners","addListener","removeListener","destroyed","destroy","s","_parseString","bytes","_parseBytes","offset","numPad","padded","Uint8Array","bytesPad","Math","ceil","empty","datas","byteCount","zeros","urlsOffset","urlsLength","urlsData","u","split"],"sourceRoot":"","sources":["../../src.ts/providers/abstract-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}